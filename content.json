{"meta":{"title":"在那桃花盛开的地方","subtitle":null,"description":"dmxiaoshen'blog","author":"dmxiaoshen","url":"http://dmxiaoshen.com"},"pages":[{"title":"何德何能 何其有幸","date":"2018-06-28T03:48:31.978Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"about/index.html","permalink":"http://dmxiaoshen.com/about/index.html","excerpt":"","text":"感谢 Hexo 提供博客程序 icarus 提供博客主题 github 提供博客托管 Travis CI 提供博客自动构建 Cloudflare 提供域名解析及https证书 json-content 提供博客本地搜索 百度统计 提供博客统计 gitalk 提供博客评论 hitokoto 提供页脚一句话 不蒜子 提供网站访量及访客统计 APlayer 提供音乐播放 Atom 提供博客写作环境 免责声明本人在此发布文章（包括但不限于汉字、拼音、阿拉伯字母 、图片、影像，以及前述之各种任意组合等等）均为随意敲击键盘所出，用于检验本人电脑键盘录入、屏幕显示的机械、光电性能，并不代表本人观点。本网站所提供的信息，仅供参考之用。 友情链接暂无，欢迎互换。 签名档除了罗彻斯特谁来爱简爱 音乐"}],"posts":[{"title":"中文文件名测试","slug":"中文名","date":"2018-06-26T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2018/06/27/中文名/","link":"","permalink":"http://dmxiaoshen.com/2018/06/27/中文名/","excerpt":"","text":"如果文章md文件名为中文会怎么样呢?","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"java设计模式","slug":"java设计模式","date":"2018-06-25T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2018/06/26/java设计模式/","link":"","permalink":"http://dmxiaoshen.com/2018/06/26/java设计模式/","excerpt":"","text":"java设计模式建造者模式建造者模式是","categories":[],"tags":[]},{"title":"Travis CI自动部署hexo到Coding Pages","slug":"travis-coding","date":"2017-09-01T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/09/02/travis-coding/","link":"","permalink":"http://dmxiaoshen.com/2017/09/02/travis-coding/","excerpt":"","text":"需要总结一下。","categories":[],"tags":[]},{"title":"GitHub上fork的代码如何同步更新","slug":"git-fork","date":"2017-08-18T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/08/19/git-fork/","link":"","permalink":"http://dmxiaoshen.com/2017/08/19/git-fork/","excerpt":"github上有很多的代码，遇见心仪的项目总忍不住fork下来，但是过了一段时间以后原作者已经更新了提交，而我们的项目还是当时fork时的样子，该怎么办?","text":"github上有很多的代码，遇见心仪的项目总忍不住fork下来，但是过了一段时间以后原作者已经更新了提交，而我们的项目还是当时fork时的样子，该怎么办? 前言一般习惯是fork项目以后，不去动原有的分支，如果要自己修改代码，则从当前master新建一个分支如my-dev，这样比较清爽。","categories":[],"tags":[]},{"title":"Atom安装markdown插件写博客","slug":"atom-plugins","date":"2017-08-02T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/08/03/atom-plugins/","link":"","permalink":"http://dmxiaoshen.com/2017/08/03/atom-plugins/","excerpt":"自从用了markdown写博客，基本上是入坑了，用写代码般的思路及流畅程度，专注写作本身而不是各种排版。那么，最终问题变成，如何寻找一款本地编写markdown的软件变得非常迫切，在线的肯定不爽，很多编程IDE也支持md文件编写，如idea，eclipse或者一些前端IDE，但是总感觉少点什么，直到网上找到这款叫做Atom的软件。","text":"自从用了markdown写博客，基本上是入坑了，用写代码般的思路及流畅程度，专注写作本身而不是各种排版。那么，最终问题变成，如何寻找一款本地编写markdown的软件变得非常迫切，在线的肯定不爽，很多编程IDE也支持md文件编写，如idea，eclipse或者一些前端IDE，但是总感觉少点什么，直到网上找到这款叫做Atom的软件。 简介Atom 是github专门为程序员推出的一个跨平台文本编辑器。具有简洁和直观的图形用户界面，并有很多有趣的特点：支持CSS，HTML，JavaScript等网页编程语言。它支持宏，自动完成分屏功能，集成了文件管理器。 插件这才是这款软件的核心啊，简直良心之作，话不多说，直接上菜。 simplified-chinese-menu插件Atom 的简体中文汉化语言包,目前最全的汉化包。包含菜单汉化、右键菜单汉化以及设置汉化。 language-markdown插件markdown语言增强，书写的时候能能有编写代码时自动提示补全这种操作。 markdown-preview-enhanced插件markdown预览增强，使用此插件请先关闭自带的markdown-preview插件，预览是只需要ctrl+shift+M即可分屏预览。 markdown-scroll-sync插件实时屏幕滚动预览，源文件滚动到哪，预览文件跟到哪，这实在是一目了然。 markdown-table-editor插件我原来以为markdown编写表格已经很方便了，用了这款软件，没想到啊，原来之前都是渣操作啊，神作。","categories":[],"tags":[]},{"title":"Centos7开启bbr加速","slug":"centos7-bbr","date":"2017-07-17T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/07/18/centos7-bbr/","link":"","permalink":"http://dmxiaoshen.com/2017/07/18/centos7-bbr/","excerpt":"此文完全是搬运而来，因为原文写的太棒了，根本不需要任何整理修改，如果喜欢，也可以直接访问原文","text":"此文完全是搬运而来，因为原文写的太棒了，根本不需要任何整理修改，如果喜欢，也可以直接访问原文 bbr算法由来 Google 在 2016年9月份开源了他们的优化网络拥堵算法BBR，最新版本的 Linux内核（4.9-rc8）中已经集成了该算法。 对于TCP单边加速，并非所有人都很熟悉，不过有另外一个大名鼎鼎的商业软件“锐速”，相信很多人都清楚。特别是对于使用国外服务器或者VPS的人来说，效果更佳。 网上有很多在 Debian 和 Ubuntu 系统下启用 BBR 的教程，我就不粘贴了，我自己一直用的是 CentOS，本文介绍一下在 64位 CentOS 7 系统下开启BBR的方法。 升级内核第一步首先是升级内核到支持BBR的版本： 12#导入公钥rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org CentOS 712#安装elrepo源rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm CentOS 612#安装elrepo源rpm -Uvh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm CentOS 6 &amp; 712#安装4.9.0以上的内核yum --enablerepo=elrepo-kernel install kernel-ml -y 确认是否成功安装新版内核rpm -qa | grep kernel如果安装成功，你应该会看到 kernel-ml-4..-*.el7.elrepo.x86_64 这样的条目： 1234kernel-tools-3.10.0-514.el7.x86_64kernel-ml-4.12.4-1.el7.elrepo.x86_64kernel-tools-libs-3.10.0-514.el7.x86_64kernel-3.10.0-514.el7.x86_64 调整GRUB启动顺序 在安装好新版本内核以后，要先用新安装的内核引导系统看看能否正常启动，下面是直接调整 GRUB2 启动顺序的命令： 12# 查看可用的启动项egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \\' 执行完这条命令以后，能看到多个可以引导的系统，比如我的是： 123CentOS Linux (4.12.4-1.el7.elrepo.x86_64) 7 (Core)CentOS Linux (3.10.0-514.el7.x86_64) 7 (Core)CentOS Linux (0-rescue-d4d0adfea8e944e5b8019ed1aa3c9e16) 7 (Core) 不管有多少个，从上往下，记住要引导的项的序号（从0开始计数）即可，比如上面的例子，我要使用第一项 CentOS Linux (4.12.4-1.el7.elrepo.x86_64) 7 (Core) 来引导，序号是 0。 设置默认引导项grub2-set-default 0 重启系统reboot 修改sysctl 开启 BBR 重启系统之后，通过 uname -r 或者其它命令可以看到我们的内核已经是新版内核了，接下来开启 BBR 12echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.confecho &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf 12345678# 加载 /etc/sysctl.conf 文件中的参数并显示，主要看看有没有报错的设置（显示的结果与你的配置文件内容有关）sysctl -p# 验证 bbr 是否开启，如果成功，应该会看到 net.ipv4.tcp_congestion_control = bbrsysctl net.ipv4.tcp_available_congestion_control# 依然是验证，如果成功，应该会看到类似 tcp_bbr 16384 3 这样的文字lsmod | grep bbr 以上每一步最好都根据注释中的说明仔细检查一下是否顺利，然后再进行下一步，如果都成功的话，到这里已经成功开启BBR算法。可以在你的服务器上放一个大文件，然后用浏览器下载一下看看速度是否有提升。 我的洛杉矶VPS加速以后，用Chrome下载的速度从500K/s左右提升到了3.3M/s左右。","categories":[],"tags":[]},{"title":"Shadowsocks优化篇","slug":"shadowsocks-advance","date":"2017-07-16T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/07/17/shadowsocks-advance/","link":"","permalink":"http://dmxiaoshen.com/2017/07/17/shadowsocks-advance/","excerpt":"个人感觉，优化和不优化差别还是很大的，简直就是两个软件，当然本文是参考网络上的教程，非原创，仅供参考。","text":"个人感觉，优化和不优化差别还是很大的，简直就是两个软件，当然本文是参考网络上的教程，非原创，仅供参考。 首先要确认vps主机属于何种架构 我们知道VPS的虚拟技术有许多种，如Openvz、Xen、VMware vSphere、Hyper-V、KVM及Xen的HVM与PV等。在Xen中pv是半虚拟化，hvm是全虚拟化，pv只能用于linux内核的系统，hvm可以虚拟所有常见操作系统(Linux+windows)，理论效率比pv略低，另外hvm需要cpu虚拟化指令支持，pv无此要求。而Openvz是一个类似于Linux-VServer的操作系级全虚拟化解决方案，目前基于Xen和Openvz的VPS服务商比较多。那么如何判断买到的是哪种虚拟技术的VPS呢？价格上，Openvz一般比Xen便宜得多，但稳定性和用途范围就不及Xen和Kvm了。1、通过系统目录判断执行命令：ls -al /proc一般Openvz的话，则会有vz目录，Xen的话则会有xen目录。2、通过网卡信息判断执行命令：ifconfig一般Openvz的话，则会有venet0或venet0:x网卡标识，Xen的话一般则是eth0。3、通过VPS控制面板判断流行的VPS面板包括SolusVM、vePortal等，会显示具体的虚拟技术。4、通过virt-what命令判断CentOS或RedHat系统的话，执行命令：yum install -y virt-whatubuntu（debian系）：sudo apt-get install virt-whatvirt-what是一个判断当前环境所使用的虚拟技术的脚本，常见的虚拟技术基本上都能正常识别出来。安装好virt-what后，执行命令：sudo virt-what根据返回的信息，即可判断出当前VPS所使用的虚拟技术。腾讯云、UCLOUD云、青云都是基于KVM的，阿里后面的也转成KVM架构了，Linode也转成KVM了（注明：非原创，转载于互联网，有删减） virt也可以编译安装 可以执行如下命令安装(需要安装好gcc、make)：wget http://people.redhat.com/~rjones/virt-what/files/virt-what-1.12.tar.gztar zxvf virt-what-1.12.tar.gzcd virt-what-1.12/./configuremake &amp;&amp; make install再运行 virt-what ，脚本就会判断出当前环境所使用的虚拟技术 优化基于kvm的系统优化基于kvm架构vps的优化这方面SS给出了非常详尽的优化指南，主要有：优化内核参数，开启TCP Fast Open 优化内核参数编辑vi /etc/sysctl.conf，复制进去 123456789101112131415161718192021222324252627282930313233343536373839404142# max open filesfs.file-max = 1024000# max read buffernet.core.rmem_max = 67108864# max write buffernet.core.wmem_max = 67108864# default read buffernet.core.rmem_default = 65536# default write buffernet.core.wmem_default = 65536# max processor input queuenet.core.netdev_max_backlog = 4096# max backlognet.core.somaxconn = 4096# resist SYN flood attacksnet.ipv4.tcp_syncookies = 1# reuse timewait sockets when safenet.ipv4.tcp_tw_reuse = 1# turn off fast timewait sockets recyclingnet.ipv4.tcp_tw_recycle = 0# short FIN timeoutnet.ipv4.tcp_fin_timeout = 30# short keepalive timenet.ipv4.tcp_keepalive_time = 1200# outbound port rangenet.ipv4.ip_local_port_range = 10000 65000# max SYN backlognet.ipv4.tcp_max_syn_backlog = 4096# max timewait sockets held by system simultaneouslynet.ipv4.tcp_max_tw_buckets = 5000# TCP receive buffernet.ipv4.tcp_rmem = 4096 87380 67108864# TCP write buffernet.ipv4.tcp_wmem = 4096 65536 67108864# turn on path MTU discoverynet.ipv4.tcp_mtu_probing = 1# for high-latency networknet.ipv4.tcp_congestion_control = hybla# forward ipv4net.ipv4.ip_forward = 1 保存生效sysctl -p其中最后的hybla是为高延迟网络（如美国，欧洲）准备的算法，需要内核支持，测试内核是否支持，在终端输入：sysctl net.ipv4.tcp_available_congestion_control如果结果中有hybla，则证明你的内核已开启hybla，如果没有hybla，可以用命令modprobe tcp_hybla开启。 对于低延迟的网络（如日本，香港等），可以使用htcp，可以非常显著的提高速度，首先使用modprobe tcp_htcp开启，再将net.ipv4.tcp_congestion_control = hybla改为net.ipv4.tcp_congestion_control = htcp，建议EC2日本用户使用这个算法。 TCP优化1.修改文件句柄数限制如果是ubuntu/centos均可修改/etc/sysctl.conf找到fs.file-max这一行，修改其值为1024000，并保存退出。然后执行sysctl -p使其生效修改vi /etc/security/limits.conf文件，加入 12* soft nofile 512000* hard nofile 1024000 针对centos,还需要修改vi /etc/pam.d/common-session文件，加入session required pam_limits.so 2.修改vi /etc/profile文件，加入ulimit -SHn 1024000然后重启服务器执行ulimit -n，查询返回1024000即可。 sysctl.conf报错解决方法修复modprobe的：rm -f /sbin/modprobeln -s /bin/true /sbin/modprobe修复sysctl的：rm -f /sbin/sysctlln -s /bin/true /sbin/sysctl 开启TCP Fast Open这个需要服务器和客户端都是Linux 3.7+的内核，一般Linux的服务器发行版只有debian jessie有3.7+的，客户端用Linux更是珍稀动物，所以这个不多说，如果你的服务器端和客户端都是Linux 3.7+的内核，那就在服务端和客户端的vi /etc/sysctl.conf文件中再加上一行。12# turn on TCP Fast Open on both client and server sidenet.ipv4.tcp_fastopen = 3 然后把vi /etc/shadowsocks.json配置文件中”fast_open”: false改为”fast_open”: true。这样速度也将会有非常显著的提升。 加密层面安装M2Crypto这个可以提高SS的加密速度，安装办法：Debian/Ubuntuapt-get install python-m2crypto安装之后重启SS，速度将会有一定的提升 CentOS先安装依赖包： 12yum install -y openssl-devel gcc swig python-devel autoconf libtoolyum install -y python-pip 再通过pip安装M2Crypto：pip install M2Crypto 或者pip install M2Crypto --upgrade 安装 gevent安装 gevent可以提高 Shadowsocks 的性能。Debian/Ubuntu12apt-get install python-dev libevent-dev python-setuptools python-geventeasy_install greenlet gevent CentOS 123yum install -y libeventpip install greenletpip install gevent 使用CHACHA20加密算法首先，安装libsodium，让系统支持chacha20算法。Debian/Ubuntu 12345apt-get install build-essentialwget https://download.libsodium.org/libsodium/releases/LATEST.tar.gztar xf LATEST.tar.gz &amp;&amp; cd libsodium*./configure &amp;&amp; make &amp;&amp; make installldconfig CentOS 1234567yum groupinstall \"Development Tools\"wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gztar zxf LATEST.tar.gzcd libsodium*./configuremakemake install vi /etc/ld.so.conf添加一行：/usr/local/lib保存退出后，运行命令：ldconfig 然后修改ss加密方式：vi /etc/shadowsocks.json “method”:”aes-256-cfb”改成”method”:”chacha20”,重启SS即可/etc/init.d/shadowsocks restart或者ssserver -c /etc/shadowsocks.json -d restart 网络层面此外，选择合适的端口也能优化梯子的速度，广大SS用户的实践经验表明，检查站（GFW）存在一种机制来降低自身的运算压力，即常用的协议端口（如http，smtp，ssh，https，ftp等）的检查较少，所以建议SS绑定这些常用的端口（如：21，22，25，80，443），速度也会有显著提升。如果你还要给小伙伴爬，那我建议开启多个端口而不是共用，这样网络会更加顺畅。 防火墙设置（如有）自动调整MTUiptables -I FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu 开启 NAT （记得把 eth0 改成自己的网卡名，openvz 的基本是 venet0 ）iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE 开启 IPv4 的转发sysctl -w net.ipv4.ip_forward=1 打开 443 端口 12iptables -I INPUT -p tcp --dport 443 -j ACCEPTiptables -I INPUT -p udp --dport 443 -j ACCEPT 重启防火墙iptables：service iptables restart 使用感受首先肯定要挑选一个网络跳转少的vps主机，不一定日本，新加坡就好，美西也不一定比美东好，可以用besttrace软件测试下网络路由，主要看是否直连或者跳了几层。然后才是优化，优化以后效果还是很明显的。但是最重要的，或许是开启bbr加速，这将在下一篇文章介绍。 参考链接","categories":[],"tags":[]},{"title":"Shadowsocks安装教程","slug":"shadowsocks-install","date":"2017-07-15T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/07/16/shadowsocks-install/","link":"","permalink":"http://dmxiaoshen.com/2017/07/16/shadowsocks-install/","excerpt":"本篇内容也是参考互联网其他教程，并非原创，只不过做个记录，以便查阅。","text":"本篇内容也是参考互联网其他教程，并非原创，只不过做个记录，以便查阅。 本脚本适用环境系统支持：CentOS 6，7，Debian，Ubuntu内存要求：≥128M日期：2017 年 07 月 28 日系统支持：CentOS 6，7，Debian，Ubuntu内存要求：≥128M日期：2017 年 07 月 28 日 关于脚本一键安装 Python 版 shadowsocks 的最新版。一键安装 Python 版 shadowsocks 的最新版。 默认配置服务器端口：自己设定（如不设定，默认为 8989）密码：自己设定（如不设定，默认为 teddysun.com）加密方式：自己设定（如不设定，默认为 aes-256-gcm）备注：脚本默认创建单用户配置文件，如需配置多用户，安装完毕后参照下面的教程示例手动修改配置文件后重启即可。 客户端下载WindowsAndroid 使用方法使用root用户登录，运行以下命令: 123$ wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh$ chmod +x shadowsocks.sh$ ./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log 安装完成后，脚本提示如下 Congratulations, shadowsocks install completed!Your Server IP:your_server_ipYour Server Port:your_server_portYour Password:your_passwordYour Local IP:127.0.0.1Your Local Port:1080Your Encryption Method:aes-256-cfb Welcome to visit:http://teddysun.com/342.htmlEnjoy it! 卸载方法使用root用户登录，运行以下命令： ./shadowsocks.sh uninstall 单用户配置文件 Sample配置文件路径： vi /etc/shadowsocks.json { “server”:”0.0.0.0”, “server_port”:8989, “local_address”:”127.0.0.1”, “local_port”:1080, “password”:”yourpassword”, “timeout”:300, “method”:”aes-256-cfb”, “fast_open”: false} 多用户多端口配置文件 Sample配置文件路径： vi /etc/shadowsocks.json { “server”:”0.0.0.0”, “local_address”:”127.0.0.1”, “local_port”:1080, “port_password”:{ “8989”:”password0”, “9001”:”password1”, “9002”:”password2”, “9003”:”password3”, “9004”:”password4” }, “timeout”:300, “method”:”aes-256-cfb”, “fast_open”: false} 使用命令123456789101112启动：/etc/init.d/shadowsocks start停止：/etc/init.d/shadowsocks stop重启：/etc/init.d/shadowsocks restart状态：/etc/init.d/shadowsocks status写入自启echo \"ssserver -c /etc/shadowsocks.json -d restart\" &gt;&gt; /etc/rc.local查看日志less /var/log/shadowsocks.log说明： 从 Shadowsocks 2.6 开始，你可以直接在后台运行 Shadowsocks，无需 Supervisor 。 这样省掉了 Supervisor 进程占用的内存。ssserver -c /etc/shadowsocks.json -d startssserver -c /etc/shadowsocks.json -d stopssserver -c /etc/shadowsocks.json -d restart 查看连接的人数12345678Ubuntu:apt-get install lsof -yCentOs:yum install lsof -y# 假设服务器端口1080, 查看连接数sudo lsof -i -n -P | egrep -c ':1080.+ESTABLISHED'# 查看连接列表sudo lsof -i -n -P | egrep ':1080.+ESTABLISHED' 利用脚本查看连接列表，并添加定时任务新建目录mkdir test里添加以下脚本 123456789101112#!/bin/bash## File: port-ip-monitor.sh## Created: Wednesday, August 27 2014 by Hua Liang[Stupid ET] &lt;et@everet.org&gt;#filename=\"port-ip-monitor.log\"regex=\"8888\" # monitor 你的端口date +\"[%Y-%m-%d %H:%M:%S]\" &gt;&gt; $filenamenetstat -anp | egrep $regex | grep -E \"tcp.*ESTABLISHED\" | awk '&#123;print $4, $5&#125;' | cut -d: -f2 | sort -u &gt;&gt; $filename 编辑crontab -e里增加 * (cd /test/ &amp;&amp; bash port-ip-monitor.sh)启动服务service crond start然后我们在/test/里就看到port-ip-monitor.log了查看日志less /test/port-ip-monitor.log 参考链接","categories":[],"tags":[]},{"title":"VPS创建需要做的一些事","slug":"vps-create","date":"2017-07-03T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/07/04/vps-create/","link":"","permalink":"http://dmxiaoshen.com/2017/07/04/vps-create/","excerpt":"新建一个vps主机，一般而言需要做一些基本的事情，比如修改root密码，更改ssh默认端口之类，本文只是列举一些，仅供参考，暂时就这些，后续可能会补充。","text":"新建一个vps主机，一般而言需要做一些基本的事情，比如修改root密码，更改ssh默认端口之类，本文只是列举一些，仅供参考，暂时就这些，后续可能会补充。 修改root密码$ passwd root 安装vim及net-tools等12345$ yum install vim $ yum install net-tools$ yum install zip unzip$ yum install lrzsz$ yum install gcc gcc-c++ 更改ssh默认22端口$ vim /etc/ssh/sshd_config 在 #Port 22 这一行下面 加入 Port 2102 然后别忘了防火墙开放2102端口 $ vim /etc/firewalld/zones/public.xml 然后在&lt;service name=&quot;ssh&quot;&gt;下面添加一行&lt;port protocol=&quot;tcp&quot; port=&quot;2102&quot;/&gt;保存退出 重启防火墙$ systemctl restart firewalld.service重启sshd服务$ service sshd restart 安装besttrace 一款由 IPIP.NET 开发的路由追踪检测工具。目前已经涵盖了 Windows、Android、iOS、Mac平台。Best Trace 可对服务器所经过的路由进行可视化检测，并可以准确标注路由所在位置以及 AS 号。支持查询本机 IP、路由监控、批量 Ping 等。一款由 IPIP.NET 开发的路由追踪检测工具。目前已经涵盖了 Windows、Android、iOS、Mac平台。Best Trace 可对服务器所经过的路由进行可视化检测，并可以准确标注路由所在位置以及 AS 号。支持查询本机 IP、路由监控、批量 Ping 等。 官网地址 https://www.ipip.net/download.html 1234$ wget http://cdn.ipip.net/17mon/besttrace4linux.zip$ unzip besttrace4linux.zip$ chmod a+x besttrace$ ./besttrace -q 1 目标ip 说明: besttrace是64位下执行，32位则执行besttrace32 安装virt VPS的虚拟化技术有很多种，常见的VPS虚拟化架构有多种：OpenVZ、Xen、Hyper-V、KVM、VMWare，各种虚拟化基础虚拟的VPS特点性能也不仅相同，为了不被JS忽悠，需要检测一下当前VPS使用的虚拟化技术是什么。windows的VPS方便一点，在添加和删除程序那里看就行了，一般会安装虚拟化需要用到的工具，再加上Windows大家用的也多，操作起来可能也得心应手一点。Linux的VPS可以使用一个叫做virt-what的小工具来检测一下当前的VPS使用的是哪种虚拟化技术。 virt-what官方网站:http://people.redhat.com/~rjones/virt-what/files/ 123456$ wget http://people.redhat.com/~rjones/virt-what/files/virt-what-1.12.tar.gz$ tar zxvf virt-what-1.12.tar.gz$ cd virt-what-1.12/$ ./configure$ make &amp;&amp; make install$ virt-whatvirt-what","categories":[],"tags":[]},{"title":"Centos7防火墙","slug":"centos7-firewall","date":"2017-06-17T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/06/18/centos7-firewall/","link":"","permalink":"http://dmxiaoshen.com/2017/06/18/centos7-firewall/","excerpt":"centos从6到7，防火墙由原先的iptables变为了firewalld，不熟悉的话操作就很不习惯，这里记录下firewalld的一些常用操作。","text":"centos从6到7，防火墙由原先的iptables变为了firewalld，不熟悉的话操作就很不习惯，这里记录下firewalld的一些常用操作。 系统命令12345678910# 启动$ systemctl start firewalld.service# 关闭$ systemctl stop firewalld.service# 设置开机启动$ systemctl enable firewalld.service# 关闭开机启动$ systemctl disable firewalld.service# 查看状态$ systemctl status firewalld firewall-cmd 命令1234567891011121314# 查看状态$ firewall-cmd --state //running 表示运行# 重新加载防火墙(一般用于修改配置后)$ firewall-cmd --reload# 开启某个端口$ firewall-cmd --permanent --zone=public --add-port=8080-8081/tcp //永久$ firewall-cmd --zone=public --add-port=8080-8081/tcp //临时# 设置某个ip 访问某个服务$ firewall-cmd --permanent --zone=public --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.0.4/24\" service name=\"http\" accept\"# 查看开启的服务和端口$ firewall-cmd --permanent --zone=public --list-services //服务空格隔开 例如 dhcpv6-client https ss$ firewall-cmd --permanent --zone=public --list-ports //端口空格隔开 例如 8080-8081/tcp 8388/tcp 80/tcp# 查看防火墙当前配置$ firewall-cmd --list-all 设置某个ip 访问某个服务：执行命令的效果相当于在配置文件(/etc/firewalld/zones/public.xml)中加入： 12345&lt;rule family=\"ipv4\"&gt; &lt;source address=\"192.168.0.4/24\"/&gt; &lt;service name=\"http\"/&gt; &lt;accept/&gt;&lt;/rule&gt; 设置某个ip 访问某个服务：执行命令的效果相当于在配置文件(/etc/firewalld/zones/public.xml)中加入： 1&lt;port protocol=\"tcp\" port=\"8080\"/&gt; 关闭firewall防火墙，使用iptables防火墙12345678910111213141516171819202122231、直接关闭防火墙systemctl stop firewalld.service #停止firewallsystemctl disable firewalld.service #禁止firewall开机启动2、设置 iptables serviceyum -y install iptables-services如果要修改防火墙配置，如增加防火墙端口3306vi /etc/sysconfig/iptables增加规则-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT保存退出后systemctl restart iptables.service #重启防火墙使配置生效systemctl enable iptables.service #设置防火墙开机启动 最后重启系统使设置生效即可","categories":[],"tags":[]},{"title":"编程系列文章汇总","slug":"favorites","date":"2017-04-22T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/04/23/favorites/","link":"","permalink":"http://dmxiaoshen.com/2017/04/23/favorites/","excerpt":"昔人已乘黄鹤去，此地空余黄鹤楼。黄鹤一去不复返，白云千载空悠悠。晴川历历汉阳树，芳草萋萋鹦鹉洲。日暮乡关何处是？烟波江上使人愁。","text":"昔人已乘黄鹤去，此地空余黄鹤楼。黄鹤一去不复返，白云千载空悠悠。晴川历历汉阳树，芳草萋萋鹦鹉洲。日暮乡关何处是？烟波江上使人愁。 Spring Boot系列 Spring Boot基础教程 Spring Cloud系列 Spring Cloud基础教程 Git系列 Git 分支管理最佳实践 Git Submodule管理项目子模块 Git远程操作详解-阮一峰的网络日志 Linux环境下使用git pull push代码缓慢的问题 Activiti系列 Activiti 5.16 用户手册 Activiti工作流引擎使用 Activiti咖啡兔 Activiti工作流简单入门 Activiti入门教程8（玩转Task任务API） Activiti - Engine 5.22.0 API Activiti的Eclipse插件安装指南 Activiti中彻底解决待办事项列表查询复杂、API不友好的设计方案 Redis系列 Redis-3.2.3 安装部署 linux下redis的安装及配置启动 redis安装部署维护备份 Tomcat系列 Tomcat 类加载机制触发的 Too many open files 问题分析 常用下载地址GitGit是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。 FoxmailFoxmail邮件客户端软件，是中国最著名的软件产品之一，中文版使用人数超过400万，英文版的用户遍布20多个国家，名列“十大国产软件”，被 太平洋电脑网评为五星级软件。Foxmail通过和U盘的授权捆绑形成了安全邮、随身邮等一系列产品。2005年3月16日被腾讯收购。 VMware Workstation VMware Workstation（中文名“威睿工作站”）是一款功能强大的桌面虚拟计算机软件，提供用户可在单一的桌面上同时运行不同的操作系统，和进行开发、测试 、部署新的应用程序的最佳解决方案。VMware Workstation可在一部实体机器上模拟完整的网络环境，以及可便于携带的虚拟机器，其更好的灵活性与先进的技术胜过了市面上其他的虚拟计算机软件。对于企业的 IT开发人员和系统管理员而言， VMware在虚拟网路，实时快照，拖曳共享文件夹，支持 PXE 等方面的特点使它成为必不可少的工具。VMware 12 专业版永久许可证密钥 5A02H-AU243-TZJ49-GTC7K-3C61N (如有条件请支持正版) RedisDesktopManagerRedis Desktop Manager（RedisDesktopManager，RDM）是一个快速、简单、支持跨平台的 Redis 桌面管理工具，基于 Qt 5 开发，支持通过 SSH Tunnel 连接。 MavenMaven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。Maven 除了以程序构建能力为特色之外，还提供高级项目管理工具。由于 Maven 的缺省构建规则有较高的可重用性，所以常常用两三行 Maven 构建脚本就可以构建简单的项目。由于 Maven 的面向项目的方法，许多 Apache Jakarta 项目发文时使用 Maven，而且公司项目采用 Maven 的比例在持续增长。 EclipseEclipse 是一个开放源代码的、基于Java的可扩展开发平台。就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。幸运的是，Eclipse 附带了一个标准的插件集，包括Java开发工具（Java Development Kit，JDK）。 NginxNginx (“engine x”) 是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。Nginx是由Igor Sysoev为俄罗斯访问量第二的Rambler.ru站点开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。 JenkinsJenkins是一个开源软件项目，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。 RobomongoRobomongo 是一个基于 Shell 的跨平台开源 MongoDB 管理工具。嵌入了 JavaScript 引擎和 MongoDB mogo ZookeeperZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。 TomcatTomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。 RabbitMQRabbitMQ是流行的开源消息队列系统，用erlang语言开发。RabbitMQ是AMQP（高级消息队列协议）的标准实现。 RedisRedis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。 MongodbMongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案,是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。 MySQLMySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL 最流行的关系型数据库管理系统，在 WEB 应用方面MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。 JDKJDK是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境，JAVA工具和JAVA基础的类库。 Nexus-Maven私服Nexus是一个强大的Maven仓库管理器，它极大地简化了自己内部仓库的维护和外部仓库的访问。利用Nexus你可以只在一个地方就能够完全控制访问 和部署在你所维护仓库中的每个Artifact。Nexus是一套“开箱即用”的系统不需要数据库，它使用文件系统加Lucene来组织数据。Nexus 使用ExtJS来开发界面，利用Restlet来提供完整的REST APIs，通过m2eclipse与Eclipse集成使用。","categories":[],"tags":[]},{"title":"Zookeeper集群配置","slug":"zookeeper-cluster","date":"2017-03-18T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/03/19/zookeeper-cluster/","link":"","permalink":"http://dmxiaoshen.com/2017/03/19/zookeeper-cluster/","excerpt":"zk集群是分布式系统比较基础的，而且其实也不难，主要是细心，这里详细记录一下。","text":"zk集群是分布式系统比较基础的，而且其实也不难，主要是细心，这里详细记录一下。 修改zoo.cfg文件以3台zookeeper集群为例 以下操作针对3个zk,每个zk都需要如此操作 假定zk路径都为: /usr/local/zookeeper-3.4.10 首先新建一个data目录 12$ cd /usr/local/zookeeper-3.4.10$ mkdir data 修改zoo.cfg文件，其中 dataDir=/tmp/zookeeper 修改为 dataDir=/usr/local/zookeeper-3.4.10/data 注意: 如果是单台机器部署多个(伪集群)，则clientPort需修改为不同端口 末尾添加如下配置 123server.1=192.168.0.1:2888:3888server.2=192.168.0.2:2888:3888server.3=192.168.0.3:2888:3888 注意: 这里ip地址根据实际情况配置，也可以配置为host映射。如果是单台机器部署多个(伪集群)，则其中端口不能重复(2888,3888) 创建myid文件以下操作针对3个zk,每个zk都需要如此操作 在刚才配置的 dataDir=/usr/local/zookeeper-3.4.10/data 目录下创建myid文件，内容为各自ip对应的server.X,也就是上述配置的1，2，3 zk地址 文件 内容 192.168.0.1 myid 1 192.168.0.2 myid 2 192.168.0.3 myid 3 查看集群启动状态依次启动每一个zk $ ./zkServer.sh start 执行如下命令查看状态 $ ./zkServer.sh status 输出如下: ZooKeeper JMX enabled by defaultUsing config: /usr/local/zookeeper-3.4.10/bin/../conf/zoo.cfgMode: leader 或者: ZooKeeper JMX enabled by defaultUsing config: /usr/local/zookeeper-3.4.10/bin/../conf/zoo.cfgMode: follower","categories":[],"tags":[]},{"title":"Zookeeper日志指定输出","slug":"zookeeper-logger","date":"2017-03-14T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/03/15/zookeeper-logger/","link":"","permalink":"http://dmxiaoshen.com/2017/03/15/zookeeper-logger/","excerpt":"zk的安装启动是比较容易的，但是网上很少有说明zk的日志该如何保存以及设置（有也是很零碎或者不简洁),这里结合网上的教程及自身实践，给出完整方案。","text":"zk的安装启动是比较容易的，但是网上很少有说明zk的日志该如何保存以及设置（有也是很零碎或者不简洁),这里结合网上的教程及自身实践，给出完整方案。 重命名zoo_sample.cfg为zoo.cfg假设zk路径为: /usr/local/zookeeper-3.4.10 12$ cd /usr/local/zookeeper-3.4.10/conf$ mv zoo_sample.cfg zoo.cfg 修改zk的log4j.properties文件$ cd /usr/local/zookeeper-3.4.10/conf 修改log4j.properties首行的 zookeeper.root.logger=INFO, CONSOLE 修改为 zookeeper.root.logger=INFO, ROLLINGFILE 这样就可以了，如果想要日志按天保存文件，则 123log4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender修改为log4j.appender.ROLLINGFILE=org.apache.log4j.DailyRollingFileAppender 修改zkEnv.sh文件123$ cd /usr/local/zookeeper-3.4.10/$ mkdir logs$ cd bin 首先建立logs目录，用于存放日志修改zkEnv.sh文件 ZOO_LOG_DIR=”/usr/local/zookeeper-3.4.10/logs”ZOO_LOG4J_PROP=”INFO,ROLLINGFILE” 这里的ZOO_LOG4J_PROP必须和第2步的zookeeper.root.logger一致。","categories":[],"tags":[]},{"title":"Redis的安装与启动","slug":"redis-install","date":"2017-02-21T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2017/02/22/redis-install/","link":"","permalink":"http://dmxiaoshen.com/2017/02/22/redis-install/","excerpt":"redis的安装还是比较简单的，只不过有一些配置什么的需要注意，还有如果能设置为服务启动最好。","text":"redis的安装还是比较简单的，只不过有一些配置什么的需要注意，还有如果能设置为服务启动最好。 解压文件tar -zxvf redis-3.2.5.tar.gz 编译12cd redis-3.2.5make 编译完成后，在./Src目录下，有三个可执行文件redis-server、redis-benchmark、redis-cli和./redis.conf然后拷贝到一个目录下。 修改配置vi redis.conf注意几个点: bind 127.0.0.1 注释掉该句 顺便在下面一行添加 requirepass 123456 daemonize no 改为 daemonize yes 启动进入src目录redis-server ../redis.conf 测试是否启动成功12345redis-cliredis&gt; set foo barOKredis&gt; get foo\"bar\" 设置为服务1234567vi /etc/rc.d/init.d/redisdchmod a+x /etc/rc.d/init.d/redisdcp /etc/rc.d/init.d/redisd /etc/init.d/redisdchmod a+x /etc/init.d/redisdchkconfig --add redisdchkconfig redisd onchkconfig --list redisd 脚本内容如下:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677#!/bin/sh#chkconfig: 345 86 14#description: Startup and shutdown script for RedisREDISPORT=6379PROGDIR=/usr/local/redis-3.2.5/srcPROGNAME=redis-serverDAEMON=$PROGDIR/$PROGNAMECONFIG=/usr/local/redis-3.2.5/redis.confPIDFILE=/var/run/redis_$&#123;REDISPORT&#125;.pidDESC=\"redis daemon\"SCRIPTNAME=/etc/init.d/redisdstart()&#123; if test -x $DAEMON then echo -e \"Starting $DESC: $PROGNAME\" if $DAEMON $CONFIG then echo -e \"OK\" else echo -e \"failed\" fi else echo -e \"Couldn't find Redis Server ($DAEMON)\" fi&#125;stop()&#123; if test -e $PIDFILE then echo -e \"Stopping $DESC: $PROGNAME\" if kill `cat $PIDFILE` then echo -e \"OK\" else echo -e \"failed\" fi else echo -e \"No Redis Server ($DAEMON) running\" fi&#125;restart()&#123; echo -e \"Restarting $DESC: $PROGNAME\" stop start&#125;list()&#123; ps aux | grep $PROGNAME&#125;case $1 in start) start ;; stop) stop ;; restart) restart ;; list) list ;; *) echo \"Usage: $SCRIPTNAME &#123;start|stop|restart|list&#125;\" &gt;&amp;2 exit 1 ;;esacexit 0 1234service redisd startservice redisd stopservice redisd restartservice redisd list 如果遇到No such file or directory问题。 123456789101112131415161718192021222324252627282930313233343536解决方法分析原因，可能因为我平台迁移碰到权限问题我们来进行权限转换1）在Windows下转换：利用一些编辑器如UltraEdit或EditPlus等工具先将脚本编码转换，再放到Linux中执行。转换方式如下（UltraEdit）：File--&gt;Conversions--&gt;DOS-&gt;UNIX即可。2)方法用vim打开该sh文件，输入：[plain]:set ff回车，显示fileformat=dos，重新设置下文件格式：[plain]:set ff=unix保存退出:[plain]:wq再执行，竟然可以了3）在linux中的权限转换也可在Linux中转换：首先要确保文件有可执行权限#chmod u+x filename然后修改文件格式#vi filename三种方法都可以方便快速的解决关于Linux执行.sh文件，提示No such file or directory这个问题了。 如果要清理缓存123redis-cli -p 6379auth 123456flushall","categories":[],"tags":[]},{"title":"RabbitMQ安装与启动","slug":"rabbitmq-install","date":"2016-11-22T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/11/23/rabbitmq-install/","link":"","permalink":"http://dmxiaoshen.com/2016/11/23/rabbitmq-install/","excerpt":"说实话，在linux中安装rabbitmq还是比较繁琐的（个人认为），而且rabbitmq的一些配置什么的也不是很友好，出了问题不太容易直观的解决，这里稍微记录下。","text":"说实话，在linux中安装rabbitmq还是比较繁琐的（个人认为），而且rabbitmq的一些配置什么的也不是很友好，出了问题不太容易直观的解决，这里稍微记录下。 安装erlang下载rpm仓库：wget http://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm 安装rpm仓库rpm -Uvh erlang-solutions-1.0-1.noarch.rpm 安装erlangyum -y install erlang 安装完成，运行erl -v,显示如下，表示安装成功。 Erlang/OTP 20 [erts-9.1] [source] [64-bit] [smp:1:1] [ds:1:1:10] [async-threads:10] [hipe] [kernel-poll:false] Eshell V8.1 (abort with ^G) 1&gt; 安装RabbitMQ下载RabbitMQ的rpm：wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.6/rabbitmq-server-3.6.6-1.el6.noarch.rpm yum -y install rabbitmq-server-3.6.6-1.el6.noarch.rpm RabbitMQ安装管理插件cd /usr/lib/rabbitmq/bin 123./rabbitmq-plugins enable rabbitmq_management 启动插件./rabbitmq-plugins disable rabbitmq_management 禁用插件./rabbitmq-plugins list 查看已经安装的插件 RabbitMQ服务1234service rabbitmq-server start 启动服务service rabbitmq-server etc 查看哪些命令可以使用service rabbitmq-server stop 停止服务service rabbitmq-server status查看服务状态 新增用户12rabbitmqctl add_user Username Passwordrabbitmqctl set_user_tags Username administrator 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990安装最新版本的rabbitmq(3.3.1)，并启用management plugin后，使用默认的账号guest登陆管理控制台，却提示登陆失败。翻看官方的release文档后，得知由于账号guest具有所有的操作权限，并且又是默认账号，出于安全因素的考虑，guest用户只能通过localhost登陆使用，并建议修改guest用户的密码以及新建其他账号管理使用rabbitmq(该功能是在3.3.0版本引入的)。虽然可以以比较猥琐的方式：将ebin目录下rabbit.app中loopback_users里的&lt;&lt;&quot;guest&quot;&gt;&gt;删除， 并重启rabbitmq，可通过任意IP使用guest账号登陆管理控制台，但始终是违背了设计者的初衷，再加上以前对这一块了解也不多，因此有必要总结一下。1. 用户管理用户管理包括增加用户，删除用户，查看用户列表，修改用户密码。相应的命令(1) 新增一个用户rabbitmqctl add_user Username Password(2) 删除一个用户rabbitmqctl delete_user Username(3) 修改用户的密码rabbitmqctl change_password Username Newpassword(4) 查看当前用户列表rabbitmqctl list_users2. 用户角色按照个人理解，用户角色可分为五类，超级管理员, 监控者, 策略制定者, 普通管理者以及其他。(1) 超级管理员(administrator)可登陆管理控制台(启用management plugin的情况下)，可查看所有的信息，并且可以对用户，策略(policy)进行操作。(2) 监控者(monitoring)可登陆管理控制台(启用management plugin的情况下)，同时可以查看rabbitmq节点的相关信息(进程数，内存使用情况，磁盘使用情况等)(3) 策略制定者(policymaker)可登陆管理控制台(启用management plugin的情况下), 同时可以对policy进行管理。但无法查看节点的相关信息(上图红框标识的部分)。与administrator的对比，administrator能看到这些内容(4) 普通管理者(management)仅可登陆管理控制台(启用management plugin的情况下)，无法看到节点信息，也无法对策略进行管理。(5) 其他无法登陆管理控制台，通常就是普通的生产者和消费者。了解了这些后，就可以根据需要给不同的用户设置不同的角色，以便按需管理。设置用户角色的命令为：rabbitmqctl set_user_tags User TagUser为用户名， Tag为角色名(对应于上面的administrator，monitoring，policymaker，management，或其他自定义名称)。也可以给同一用户设置多个角色，例如rabbitmqctl set_user_tags hncscwc monitoring policymaker3. 用户权限用户权限指的是用户对exchange，queue的操作权限，包括配置权限，读写权限。配置权限会影响到exchange，queue的声明和删除。读写权限影响到从queue里取消息，向exchange发送消息以及queue和exchange的绑定(bind)操作。例如： 将queue绑定到某exchange上，需要具有queue的可写权限，以及exchange的可读权限；向exchange发送消息需要具有exchange的可写权限；从queue里取数据需要具有queue的可读权限。详细请参考官方文档中&quot;How permissions work&quot;部分。相关命令为：(1) 设置用户权限rabbitmqctl set_permissions -p VHostPath User ConfP WriteP ReadP(2) 查看(指定hostpath)所有用户的权限信息rabbitmqctl list_permissions [-p VHostPath](3) 查看指定用户的权限信息rabbitmqctl list_user_permissions User(4) 清除用户的权限信息rabbitmqctl clear_permissions [-p VHostPath] User","categories":[],"tags":[]},{"title":"Hexo博客托管Github Pages并结合Travis CI自动部署","slug":"hexo-travis-ci","date":"2016-11-18T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/11/19/hexo-travis-ci/","link":"","permalink":"http://dmxiaoshen.com/2016/11/19/hexo-travis-ci/","excerpt":"用hexo博客写作已经是很方便了，部署也只要deploy到github上即可，但是还是受限于需要node.js环境，而且还不能通过浏览器写作。那么问题来了，有没有这种操作，我只要一提交文章代码，就自动构建出静态网站并部署上去呢？答案当然是有的，那就是接下来要介绍的Travis CI。","text":"用hexo博客写作已经是很方便了，部署也只要deploy到github上即可，但是还是受限于需要node.js环境，而且还不能通过浏览器写作。那么问题来了，有没有这种操作，我只要一提交文章代码，就自动构建出静态网站并部署上去呢？答案当然是有的，那就是接下来要介绍的Travis CI。 登陆Travis CI官网假设已经有一个hexo博客并托管在GitHub Pages，此时应该有一个Repository叫yourname.github.io。 登陆Travis CI官网，并且用github账号登陆，此时会自动关联所有github上的仓库，页面左边My Repositories右边有个’+’号,点击选择yourname.github.io项目，这里说明一点，该项目应该有2个分支，master分支用来部署博客页面，然后source（也可以叫别的名字）是博客源码（包括文章，主题等)。 注意: package.json文件很重要，里面包含了项目依赖添加完项目后，选择如下配置: 登陆github网站主要是为了设置personal access token,画面如下: 设置完成会获得一串token，复制下来等会要配置到Travis CI网站上。 配置Access Token回到Travis CI网站，把刚才的access token值配置上去，就在刚才项目配置页面,新增一个环境变量叫GH_TOKEN, 编写.travis.yml文件Travis CI自动构建想要成功，必须正确配置.travis.yml文件，该文件放置位置为source分支下根目录。 整理如下: 1234567891011121314151617181920212223242526272829303132333435363738language: node_js #设置语言node_js: stable #设置相应的版本cache: apt: true directories: - node_modules # 缓存不经常更改的内容before_install: - export TZ='Asia/Shanghai' # 更改时区install: - npm install #安装hexo及插件script: - hexo clean #清除 - hexo g #生成after_script: - git clone https://$&#123;GH_REF&#125; .deploy_git # GH_REF是最下面配置的仓库地址 - cd .deploy_git - git checkout master - cd ../ - mv .deploy_git/.git/ ./public/ # 这一步之前的操作是为了保留master分支的提交记录，不然每次git init的话只有1条commit - cd ./public - git config user.name \"name\" #修改name - git config user.email \"email\" #修改email - git add . - git commit -m \"Travis CI Auto Builder at `date +\"%Y-%m-%d %H:%M\"`\" # 提交记录包含时间 跟上面更改时区配合 - git push --force --quiet \"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;\" master:master #GH_TOKEN是在Travis中配置token的名称branches: only: - source #只监测source分支，source是我的分支的名称，可根据自己情况设置env: global: - GH_REF: github.com/yourname/yourname.github.io.git #设置GH_REF，注意更改yourname","categories":[],"tags":[]},{"title":"MySQL安装与启动Windows篇","slug":"mysql-install-windows","date":"2016-11-17T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/11/18/mysql-install-windows/","link":"","permalink":"http://dmxiaoshen.com/2016/11/18/mysql-install-windows/","excerpt":"有时候我们会要在windows机器上安装mysql数据库，又不想下载安装文件，想通过源码安装，此文专门介绍了如果通过下载mysql.zip包，在windows环境下解压安装的过程。","text":"有时候我们会要在windows机器上安装mysql数据库，又不想下载安装文件，想通过源码安装，此文专门介绍了如果通过下载mysql.zip包，在windows环境下解压安装的过程。 将下载的压缩包解压到自定义目录官网下载文件 以mysql-5.6.28-winx64.zip为例 解压到一个单独目录: 如 D:\\mysql\\mysql-5.6.28-winx64 添加环境变量变量名：MYSQL_HOME变量值：D:\\mysql\\mysql-5.6.28-winx64 PATH中新增 %MYSQL_HOME%\\bin 将mysql注册为windows系统服务①从控制台进入到MySQL解压目录下的 bin 目录下 ②输入命令：mysqld install MySQL –defaults-file=”D:\\mysql\\mysql-5.6.28-winx64\\my-default.ini” 服务移除命令: mysqld remove 启动mysql服务方法一: 输入命令 net start mysql方法二: 开始-&gt;运行-&gt;输入services.msc 启动mysql服务 安装以后需要注意的事情修改root密码123456c:&gt;mysql –urootmysql&gt;show databases;mysql&gt;use mysql;mysql&gt;UPDATE user SET password=PASSWORD(&quot;123456&quot;) WHERE user=&apos;root&apos;;mysql&gt;FLUSH PRIVILEGES;mysql&gt;QUIT 修改数据库字符集为utf-8show variables like &#39;%char%&#39; 修改目录下的my-default.ini文件，增加这一段配置： 12345678[client]default-character-set=utf8[mysql]default-character-set=utf8[mysqld]character-set-server=utf8 保存，重启mysql。 12&gt;net stop mysql&gt;net start mysql 让root用户远程能连mysql123&gt;GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;hsg123&apos; WITH GRANT OPTION;&gt;FLUSH PRIVILEGES; (如果要指定某个ip则%换成ip，root为用户名，hsg123为访问密码) 创建用户并分配权限1234567&gt;CREATE USER dev IDENTIFIED BY &apos;dev123&apos;&gt;SHOW GRANTS FOR dev&gt;GRANT ALL PRIVILEGES ON test.* TO dev&gt;REVOKE ALL PRIVILEGES ON test.* FROM dev 可能会碰到的事情: 为什么使用了Grant all on db.* to user identified by “pass”后，在主机上访问数据库还会出现ERROR 1045 (28000): Access denied for user ‘user‘@’localhost’ (using password: YES) 的错误提示？ 解答方法如下：运行命令 Grant all on db.* to ‘user‘@’localhost’ identified by “pass” 原因是：当不加@选项时，效果与加@’%’是一样的，’%’从名义上包括任何主机，（%必须加上引号，不然与@放在一起可能不会被辨认出。）不过有些时候（有些版本）’%’不包括localhost，要单独对@’localhost’进行赋值。","categories":[],"tags":[]},{"title":"Linux升级默认python版本2.6到2.7","slug":"linux-python","date":"2016-11-04T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/11/05/linux-python/","link":"","permalink":"http://dmxiaoshen.com/2016/11/05/linux-python/","excerpt":"老的linux发行版内置的Python版本还是旧的2.6，但是现在有些新的软件依赖最低支持Python2.7版本，因此需要升级。","text":"老的linux发行版内置的Python版本还是旧的2.6，但是现在有些新的软件依赖最低支持Python2.7版本，因此需要升级。 查看python版本python -V注意大写 下载Python2.7wget http://python.org/ftp/python/2.7.3/Python-2.7.3.tar.bz2这时候有可能出现: certificate common name “*.python.org” doesn’t match requested host name “python.org”.不慌，执行改为：wget http://python.org/ftp/python/2.7.3/Python-2.7.3.tar.bz2 --no-check-certificate 解压tar -jxvf Python-2.7.3.tar.bz2 安装12345$ ./configure$ make all$ make install$ make clean$ make distclean 查看版本信息$ /usr/local/bin/python2.7 -V 建立软连接使系统默认的 python指向 python2.7 12$ mv /usr/bin/python /usr/bin/python2.6.6$ ln -s /usr/local/bin/python2.7 /usr/bin/python 重新检验Python 版本#python -V 解决系统 Python 软链接指向 Python2.7 版本后，因为yum是不兼容 Python 2.7的，所以yum不能正常工作，我们需要指定 yum 的Python版本 $ vi /usr/bin/yum 将文件头部的#!/usr/bin/python 改成#!/usr/bin/python2.6.6 安装pip12$ wget https://bootstrap.pypa.io/get-pip.py$ python get-pip.py 可能会出现 zipimport.ZipImportError: can’t decompress data; zlib not available 这个时候解决方法如下：1、安装依赖zlib、zlib-devel2、重新编译安装Python./configure编辑Modules/Setup.dist找到下面这句，去掉注释#zlib zlibmodule.c -I(prefix)/include−L(exec_prefix)/lib -lz重新编译安装4.有可能会出现错误：ImportError: cannot import name HTTPSHandler解决方法如下：需要在安装python前，安装OpenSSl。ubuntu下：apt-get install libssi-dev重新编译安装python 如果出现错误 可能需要安装openssl,centos中执行 yum install openssl-devel 重新编译安装python 选择性安装12$ wget https://bootstrap.pypa.io/ez_setup.py$ python ez_setup.py pip -V 查看安装版本.","categories":[],"tags":[]},{"title":"MySQL安装与启动Linux篇","slug":"mysql-install","date":"2016-10-12T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/10/13/mysql-install/","link":"","permalink":"http://dmxiaoshen.com/2016/10/13/mysql-install/","excerpt":"一般我们在linux上安装mysql有很多方法，这里介绍下如何通过下载源码包安装。","text":"一般我们在linux上安装mysql有很多方法，这里介绍下如何通过下载源码包安装。 解压tar -zxvf mysql-5.7.16-linux-glibc2.5-x86_64.tar.gz 改名mv mysql-5.7.16-linux-glibc2.5-x86_64 mysqlcp mysql /usr/local/mysql 可能需要修改 /etc/my.cnf文件如下1234567891011121314151617181920[mysqld]datadir=/usr/local/mysql/data #注意这里socket=/var/lib/mysql/mysql.sock# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0# Settings user and group are ignored when systemd is used.# If you need to run mysqld under a different user or group,# customize your systemd unit file for mariadb according to the# instructions in http://fedoraproject.org/wiki/Systemd[mysqld_safe]log-error=/var/log/mysqld.log #注意这里pid-file=/var/run/mysqld/mysqld.pid #注意这里[client] #注意这里socket=/var/lib/mysql/mysql.sock #注意这里## include all files from the config directory#!includedir /etc/my.cnf.d 执行命令123456789groupadd mysqluseradd mysql -g mysqlcd /usr/local/mysql/binyum install libaio./mysqld --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --initialize-insecure 然后注意，这里的datadir要和etc/my.conf的一致，vi /etc/my.conf 修改 datadir=/usr/local/mysql/data 启动mysqlcd /usr/local/mysql/support-files./mysql.server start 登录尝试123对于Mysql 5.7.6以后的5.7系列版本，Mysql使用mysqld --initialize或mysqld --initialize-insecure命令来初始化数据库，后者可以不生成随机密码。但是安装Mysql时默认使用的是前一个命令，这个命令也会生成一个随机密码。改密码保存在了Mysql的日志文件中。 如果用的是 –initialize 打开/var/log/mysqld.log文件，搜索字符串A temporary password is generated for root@localhost:，可以找到这个随机密码，通常这一行日志在log文件的最初几行，比较容易看到。如果用的是 –initialize-insecure 则默认首次登录不用密码 12cd /usr/local/mysql/bin./mysql -uroot 如果出现错误Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’ 如果则是因为client的默认socket地址为 /temp/mysql.sock这里需要编辑 vi /etc/my.cnf 添加一行12[client]socket=/var/lib/mysql/mysql.sock 这里需要注意，etc/my.conf文件里面配置的路径所有人应该为mysql组及mysql用户，即 chown -R mysql:mysql /var/lib/mysql重启mysql即可。 修改root密码，同时设置root可以远程连接12345set password =password(&apos;新密码&apos;);GRANT ALL PRIVILEGES ON *.* TO root@&quot;%&quot; IDENTIFIED BY &quot;1新密码&quot;;flush privileges; 添加mysql为服务123cp support-files/mysql.server /etc/init.d/mysqldchkconfig --add mysqldchkconfig mysqld on 配置文件参考（包含修改默认端口及默认字符集） 12345678910111213141516171819202122232425[mysqld]port=5506datadir=/usr/local/mysql/datasocket=/var/lib/mysql/mysql.sock# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0character-set-server=utf8# Settings user and group are ignored when systemd is used.# If you need to run mysqld under a different user or group,# customize your systemd unit file for mariadb according to the# instructions in http://fedoraproject.org/wiki/Systemd[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid[client]port=5506socket=/var/lib/mysql/mysql.sockdefault-character-set=utf8## include all files from the config directory#!includedir /etc/my.cnf.d","categories":[],"tags":[]},{"title":"外语学习的真实方法及误区","slug":"english-learn","date":"2016-09-17T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/09/18/english-learn/","link":"","permalink":"http://dmxiaoshen.com/2016/09/18/english-learn/","excerpt":"看了一篇文章，关于英语学习的。觉得恍然大悟，没错，英语就是一门语言，可是我们为什么觉得难学呢？","text":"看了一篇文章，关于英语学习的。觉得恍然大悟，没错，英语就是一门语言，可是我们为什么觉得难学呢？ 著名语言学家Greg Thomson说的：“外语学习的原理是如此之复杂，以至于没有人能说清楚；但掌握语言的过程又是如此之简单，以至于不需要说清楚。”讨论语言学习的原理，是件非常复杂的事，在下当然也没把握能描述得很清楚。而且因为外语学习就连学术界都存在很多尖锐的争论，本人也不敢说自己有把握能把争论化解。但还是决定先从简单入手，做些抛砖引玉的工作吧，探讨一下外语学习的真谛，特别是对大家在外语学习上普遍存在的误解进行分析和澄清，希望能对外语学习者有所帮助，对外语教学工作着有所启发，就知足了。 本人多年来一直在给各高校，企业和其他英语学习者做英语学习方法讲座。讲时从不煽情，从不靠表演噱头，也不搞励志，每次必将严肃的科学依据送给大家。近五年来听众过万，还比较受欢迎，其中有相当部分的人能够非常理解和赞同并提出了很多尖锐问题和改进意见，在此表示深深感谢。曾有很多人奉劝在下以此演讲能力，把风格改为煽情鼓动式，定能红遍全国和累积财富。本人对名无兴趣，否则早就这么做了。也不愿胡说八道而误人子弟。至于财富吗，不是不喜欢，而是已经有够多的了。所以本人很幸运，现在可以摆脱金钱的烦恼，静下心来读书和思考了。现在把以前演讲的部分内容整理一下发在这里，希望和大家探讨。对外语学习的主要误区 我们普遍对学外语学习方法的认识是： 要有语言环境, 多跟外国人交流，最好是能出国，不久自然就能会说了。 学习外语要多记多背，也就是说是用记忆学语言。 想纠正发音，一定要专听和模仿纯正的发音，比如BBC或VOA那种。 要学习外语语法，如果语法熟练，说句子就正确了。 要有词一定词汇量，要大量背单词。但背英语单词很难。 以前学的是书面语或过时的英语，和现在口语是不一样的，所以我口语不好。 学外语必须非常刻苦，长时间反复练习。 “全错！而且不但错，事实正好相反！” 您没看错，我说的正是：“以上这些结论不但是错误的，而且基本上与事实是正好相反的。” 大家对外语学习的误解之深，范围之广，达到了另人惊叹的程度。尽管科技发展到了今天，人们对语言获得过程的误解仍相当普遍，尤其是咱们中国人。中国人对语言学习的误解深来源于中国有着深厚的文化传统以及单一民族和单一语言。我帮大家逐一进行分析和提供分析依据，大家可以自己得出正确结论。“怎么会错呢？难道学外语不是在语言环境下最好吗？难道想纠正口音不是要听标准的发音吗？这不是理所当然的事吗？” 咳，天下有多少事都是看似理所当然，而事实正好相反呢。我们先找一个最简单的分析。就先说第3条，“纠正发音”吧。 总结一般语言学家会把外语学习过程的能力阶段分为四到五个。简单点，我们分四个。 早期（Early Stage）或初始理解期(Pre-production/Comprehension Stage)。 提高期(Upping the Ante) 增长期(Getting Serious) 高级期(Scaling Everest) 早期（Early Stage）如果单纯从零基础开始，早期（Early Stage）应该是一到两个月（由于英语与中文差异比与其他语言大，中国同学至少两个月，但也不应过长。我们的经验是一般中国同学会拖长时间。）具体实施方法建议如下：大量使用视觉辅助工具，直接建立“画面”与“声音”在大脑中的“联系”。最典型的手段有两个，一个是“看图识音”（不是看图识字，这是两个完全不同的概念）。在看图片的同时听与图片相关的英语声音；另一个是我们以前谈到过的“全身肢体反应”(TPR)。在这一时期，有几个严格的要求： 避免使用中文翻译，充分建立条件反射； 不要试图说英语，只练听力；（还在沉默期内）； 不要看任何拼写，把拼写的学习完全放弃；（不认识字母又和妨？） 如果有外教参与，外教可多用肢体语言或用手画图协助这一过程，不要教课； 不要怕听错，要放松和有信心； 这一过程结束时，应该达到1000个左右的词汇+短语量。（没问题，这个量大多数人在这期间内都达的到）。顺便说一句，以前学过一种外语的同学，再尝试这种方法时会出奇的快，而且发现跟以前学的其他语言一点不会混淆。 提高期(Upping the Ante)第二阶段的策略讲到此处差不多了。总之，这一阶段的主要任务是练习听力，而关键是找“可理解性的入。”这种输入可以来自老师，来自多媒体教程，来自外语环境的某些特定场景，等等。关键点再给大家总结一下： 千万不要着急学文字，语言掌握的关键解决“声音”。 不依赖语法知识和中文翻译，重点是“猜测”着听。 参考Series Method, Dialogue Generation。 在后期能听懂简单段落和简单对话时，可以模仿和重复一些句子并尝试自己说。 最后，可以开始阅读一些与听到的对话有关的文字。注意一定要在听之后才能读，千万不能一发现听不懂马上去翻看文字来帮忙。 这一阶段的结束，应该可以听懂生活中简单的语言。如果非要与词汇量挂钩，应该是2000到4000。用知识量来衡量，应该也就是高中毕业左右的量，当然听力程度相对高。第二阶段大致要用6个月左右的时间完成。我们描述了一下比较理想的学习条件大致应该是什么样子的，以及为什么应该是这个样子。介绍了符合这阶段特点的Series Method 和Dialogue Generation。介绍了弗朗索瓦的经历。了解了如何作到符合二语悉得的基本原理，实践起来只要尽量遵循这些原则就好。我们既不应该认为要跟外教去“学”外语，也不要缠着老外瞎聊。如果有好的学习材料，能够提供符合这一阶段特点的有效输入，其实并不需要外教，尤其这一阶段还不用开始说太多英语，外教的用处不大。我们也介绍了比较理想的材料的大致特征，供大家参考。现在好的系统越来越多，大家可以自己评判了，本人就不做任何产品宣传了。这一阶段的重点就是听力。在这阶段需要听标准发音（还没到纠正口音的时候），而且尽量要带耳机听。不要急着开始说，也不要开始读和写。最后，我们再带着对单词量，背单词和英文拼写的一些认识，其实已经开始进入下一个阶段了Getting Serious了。 增长期(Getting Serious)如果到了第三阶段，还在等着用听到的某一个具体“实用技术”来使自己成功的同学，这时也应该看出点眉目来了：并没有一个几句话就可以概括的实用方法，也没有一个统一的方法。最好的方法就是，在对语言学的基本原理和对其他人掌握语言的经验的分析和理解的基础上，根据自己的具体情况和不同的学习阶段而制订的正确学习策略。对语言学习的整体理解越透彻，这个策略就制定得越成功，尽量能够避免进入误区，成功所需要的时间和精力就会最少，实现的速度也就快些。当然对掌握语言的整体理解并不是很容易的事，也就是我们为什么会讨论了这么多的原因。这一时期的主要任务是语言难度和量增长。重点还是听力，但可以开始有针对性地说英文，同时需要进行阅读（但主要并不是为了学习如何阅读）。这一阶段结束时，可以说已经能够进行正常交流和阅读了。（外企一般职位面试，出国求学，国外生活和从事一般技术型工作等可以应付。一般听英语新闻困难不大，看原版电影可听个大概）。在这一阶段初、中期的中国同学数量比较多，但往往时间拖得过长，同时遇到的困惑也比较多。我们前面刚提到，尤其在这一阶段，每个人必须根据自己的情况，制定最适合自己的学习策略。学习策略的好坏，直接关系到学习效率和成功与否。 二语悉得在国外成型已久，在国内才刚刚开始。我们仅仅介绍了一些最简单和基本的原理，而且都是已经被证实了的和没有太多争议的结论。比如：. 需要建立外语思维： Able to think in the target language 语言的掌握不是通过翻译和记忆，而是与思维，概念或图像建立直接联系：Through association, not translation or memorization 语法的掌握是下意识的过程，不应该通过有意识地学习： An implicit subconscious learning process rather than explicit conscious learning &gt; &gt; or active instruction. 要注重理解和含义而非结构：Meaning-focus instead of form-focus. 语言环境和掌握语言的关系：Linguistic environment and language acquisition 关键是提供可理解输入条件 Comprehensive input i+1看到有些同学对这些基本结论还在质疑，尽管并没什么不可以的，但有些不必要。语言教学争论的焦点已不在这里了。 高级期(Scaling Everest)第三阶段完成就可以达到能够进行正常的交流和沟通，开始在英文环境工作和学习没有太大困难，看英文电影能理解大部分。尽管对复杂的英文理解有困难或还有些听不懂的部分，说的英文大多是大白话，但如果听说的反应迅速，已经可以定义为流利的英文了。第三阶段的跨越是最具挑战的，情况很复杂（第四阶段反而简单）而且每个人成功跨越该阶段的具体实现手段都不同，不能要求大家都用同一具体方法。所以大家也发现我们在第三阶段并没有给大家明确指定一个具体的技术手段让大家执行。但凡高效率取得成功的人，尽管具体策略不同，但都是某种手段符合了正确的学习原理。我和一些老师在对许多成功者，包括有身边朋友，同事和学生进行调查和分析后，能够发现很多共同点。对努力失败或收效不大的同学进行分析诊断，也总结出一些共同的经验教训跟大家分享。还是有一条，对少数纯靠长时间刻苦学习，苦练取得进步的同学不做介绍。 原文地址:http://english.group.iteye.com/group/topic/24950","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"Tomcat的安装与配置","slug":"tomcat-install","date":"2016-08-18T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/08/19/tomcat-install/","link":"","permalink":"http://dmxiaoshen.com/2016/08/19/tomcat-install/","excerpt":"tomcat安装本身不难，主要是一些配置的修改。","text":"tomcat安装本身不难，主要是一些配置的修改。 解压tar -zxvf apache-tomcat-8.0.32.tar.gz 启动cd apache-tomcat-8.0.32/bin/./startup.sh 配置配置内存大小:linux在catalina.sh中加入JAVA_OPTS=&quot;$JAVA_OPTS -Xms512m -Xmx1024m -XX:PermSize=512M -XX:MaxPermSize=512m&quot;位置在cygwin=false这一行之前。 windows在catalina.bat中加入set JAVA_OPTS=%JAVA_OPTS% -server -XX:PermSize=128m -XX:MaxPermSize=512m位置在rem —– Execute The Requested Command ————————————— 之后 配置用户：在tomcat-users.xml中加入 ： 12345&lt;role rolename=\"manager-script\"/&gt;&lt;role rolename=\"manager-gui\"/&gt;&lt;role rolename=\"manager-jmx\"/&gt;&lt;role rolename=\"manager-status\"/&gt;&lt;user username=\"admin\" password=\"Fengdai2016\" roles=\"manager-gui,manager-status\"/&gt; 具体详细介绍如下 ： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263在配置好Tomcat7/8后，我们往往需要访问Tomcat7/8的Manager以及Host Manager。就需要在tomcat-users.xml中配置用户角色来实现。在地址栏输入：localhost:8080访问 Tomcat，在打开的界面中，在右上角有这样三个按钮： 1. Server Status 2. Manager App 3. Host Manager 可是在我们配置好tomcat-users.xml后，这三个按钮往往不能都访问，要么是只能访问其中一个，或者就是两个。出现这种问题很有可能是你在配置中，角色没有添加全，尤其是在第三个按钮的配置上，第三个按钮的配置Tomcat7和Tomcat8的配置是不相同的。为了实现配置让三个按钮都能访问到，我们先看下tomcat-users.xml里面的一段用户配置：&lt;tomcat-users&gt;&lt;role rolename=\"manager-gui\"/&gt;&lt;role rolename=\"manager-script\"/&gt;&lt;user username=\"tomcat\" password=\"tomcat\" roles=\"manager-gui\"/&gt;&lt;user username=\"admin\" password=\"admin\" roles=\"manager-script\"/&gt;&lt;/tomcat-users&gt;&lt;role rolename=\"角色名\"&gt;这个是用来定义角色的，很明显rolename的属性值并不是我们随意写的。实际上， Tomcat已经为我们定义了4种不同的角色，也就是4个rolename， 我们只需要使用Tomcat为我们定义的这几种角色就足够满足我们的工作需要了。manager-gui #允许访问html接口(即URL路径为/manager/html/*)manager-script #允许访问纯文本接口(即URL路径为/manager/text/*)manager-jmx #允许访问JMX代理接口(即URL路径为/manager/jmxproxy/*)manager-status #允许访问Tomcat只读状态页面(即URL路径为/manager/status/*) 特别需要说明的是：manager-gui、manager-script、manager-jmx均具备manager-status的权限，也就是说，manager-gui、manager-script、manager-jmx三种角色权限无需再额外添加manager-status权限，即可直接访问路径”/manager/status/*”。 &lt;user username=\"用户名\" password=\"密码\" roles=\"角色（可多个）\"/&gt;这个很简单，就是用来表示用户的，其中roles对应的就是上面定义的角色，可以有多个角色，多个角色用“，”隔开即可。也可以配置多个用户。需要访问前两个按钮，只需配置manager-*（4个按需配置）即可。需要访问第三个按钮，需要配置 admin-gui（HTML UI接口）或admin-script（纯文本接口）。如果都要访问，配置在一起即可。下面根据Tomcat7和Tomcat8分别贴出用户配置：1、Tomcat7访问Server Status、Manager App、Host Manager的配置。声明：此配置不注重安全性，只是测试。具体根据需求可删减&lt;role rolename=\"admin\"/&gt;&lt;role rolename=\"admin-gui\"/&gt;&lt;role rolename=\"admin-script\"/&gt;&lt;role rolename=\"manager-gui\"/&gt;&lt;role rolename=\"manager-script\"/&gt;&lt;role rolename=\"manager-jmx\"/&gt;&lt;role rolename=\"manager-status\"/&gt;&lt;user username=\"admin\" password=\"admin\" roles=\"admin,admin-gui,admin-script,manager-gui,manager-script,manager-jmx,manager-status\"/&gt;2、Tomcat8访问Server Status、Manager App、Host Manager的配置。声明：此配置不注重安全性，只是测试。具体根据需求可删减Tomcat8如果在上面配置的基础上，访问时会报403错误，所以需要修改，如果没有的话新建conf/Catalina/localhost/manager.xml 文件。配置内容如下：&lt;Context privileged=\"true\" antiResourceLocking=\"false\" docBase=\"$&#123;catalina.home&#125;/webapps/manager\"&gt; &lt;Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"^.*$\" /&gt;&lt;/Context&gt;以上经过亲测，如果配置好后还提示404或403错误，欢迎留言！ 上述参考地址:地址 修改deploy文件大小限制cd webapps/manager/WEB-INF/vi web.xml 大概在50行出修改： 123456&lt;multipart-config&gt; &lt;!-- 50MB max --&gt; &lt;max-file-size&gt;52428800&lt;/max-file-size&gt; &lt;max-request-size&gt;52428800&lt;/max-request-size&gt; &lt;file-size-threshold&gt;0&lt;/file-size-threshold&gt;&lt;/multipart-config&gt;","categories":[],"tags":[]},{"title":"Maven的安装与使用","slug":"maven-install","date":"2016-08-15T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/08/16/maven-install/","link":"","permalink":"http://dmxiaoshen.com/2016/08/16/maven-install/","excerpt":"熟悉java开发的都知道，maven作为项目管理工具已经是必不可少的技能。","text":"熟悉java开发的都知道，maven作为项目管理工具已经是必不可少的技能。 解压tar -zxvf apache-maven-3.3.9-bin.tar.gz 环境变量设置123MAVEN_HOME=/usr/local/maven3export MAVEN_HOMEexport PATH=$&#123;PATH&#125;:$&#123;MAVEN_HOME&#125;/bin Maven中央仓库：http://search.maven.org/Maven仓库: http://mvnrepository.com/ maven常用命令:参考 mvn clean install -Pdev -Dmaven.test.skip=true 上传本地jar到仓库 mvn install:install-file -Dfile=E:\\\\doc\\\\dubbo-2.8.4.jar -DgroupId=com.alibaba -DartifactId=dubbo -Dversion=2.8.4 -Dpackaging=jar -DgeneratePom=true settings.xml文件详解: 地址","categories":[],"tags":[]},{"title":"铁甲钢拳","slug":"real-steel","date":"2016-05-17T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/05/18/real-steel/","link":"","permalink":"http://dmxiaoshen.com/2016/05/18/real-steel/","excerpt":"说实话，也是无意中接触到这部电影，看完以后内心久久不能平静，好久没有这种深入人心的感动以及深思，不同于火爆的好莱坞大片，没有华丽的特效，没有飞车，没有枪战，有的只是朴实的剧情，但是朴实却不平凡，那种真实感，让人仿佛忘了那是科幻片，至少我看的时候完全被剧情吸引，伴随着主人公的喜怒哀乐，找回了儿时看电影的感觉。励志又饱含亲情。","text":"说实话，也是无意中接触到这部电影，看完以后内心久久不能平静，好久没有这种深入人心的感动以及深思，不同于火爆的好莱坞大片，没有华丽的特效，没有飞车，没有枪战，有的只是朴实的剧情，但是朴实却不平凡，那种真实感，让人仿佛忘了那是科幻片，至少我看的时候完全被剧情吸引，伴随着主人公的喜怒哀乐，找回了儿时看电影的感觉。励志又饱含亲情。影片一开始，机器人的元素吸引了我，只是抱着娱乐的心态而来，反正看多了这类题材，《终结者系列》，《变形金刚系列》，《黑客帝国系列》，威尔史密斯也演过这类电影，等等一系列深入人心的经典之作。但是随着剧情的推动，我发现这电影不简单，越看越想知道结果，但是又不想草草结束，那种矛盾的心情简直折磨死人。 当查理的机器人一直战绩不佳，于此同时作为儿子的马克斯无意间发现了“亚当”，一个人形且会模仿功能的机器人，我就觉得转折点来了，虽然父子之间存在着摩擦，但是正因为这些磕磕绊绊，才显得整部影片所表现出来的父子情深才更饱含泪点以及触动心弦。 不得不提的是最后“亚当”大战“宙斯”的时候，我没有猜中结果，当然人们心中是最清楚的，谁才是真正的胜利者。最后关头，查理找回了曾作为拳击手时候的feeling。","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"当我们谈论博客时我们在谈什么","slug":"one-step","date":"2015-12-31T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2016/01/01/one-step/","link":"","permalink":"http://dmxiaoshen.com/2016/01/01/one-step/","excerpt":"为什么要写博客说起博客，其实是一个很古老的词汇，因为现在大概已经不太流行了，博客很火大概是在2005年前后，那个时候新浪，搜狐，网易，腾讯等各大互联网公司纷纷推出自己的博客平台，博客风靡一时，因为创建一个个人博客很简单，人人都去尝鲜，并以此津津乐道。 博客的出现,使我们在互联网世界,第一次有了知识积累和文化指向。使人类由粗放的数字化生存,过渡为个人化的精确的目录式生存。博客们将工作、生活和学习融为一体,通过博客日志,将日常的思想精华及时记录并发布,萃取并链接全球最有价值、最相关、最有意思的信息与资源。在其形成的博客媒介下,更多的知识工作者能够零距离、零壁垒地汲取这些最鲜活的思想。","text":"为什么要写博客说起博客，其实是一个很古老的词汇，因为现在大概已经不太流行了，博客很火大概是在2005年前后，那个时候新浪，搜狐，网易，腾讯等各大互联网公司纷纷推出自己的博客平台，博客风靡一时，因为创建一个个人博客很简单，人人都去尝鲜，并以此津津乐道。 博客的出现,使我们在互联网世界,第一次有了知识积累和文化指向。使人类由粗放的数字化生存,过渡为个人化的精确的目录式生存。博客们将工作、生活和学习融为一体,通过博客日志,将日常的思想精华及时记录并发布,萃取并链接全球最有价值、最相关、最有意思的信息与资源。在其形成的博客媒介下,更多的知识工作者能够零距离、零壁垒地汲取这些最鲜活的思想。博客传播的出现,标志着以“信息共享”为特征的第一代门户之后,追求“思想共享”为特征的第二代门户正在浮现,互联网开始真正凸现无穷的知识价值。博客传播是网络传播领域出现的个性鲜明的传播现象,其出现改变了网络传播的秩序,重新划分了网络传播的界限。博客的出现还打破了长久以来传统媒体对媒介所传播内容的控制,使得由美国社会心理学家、传播学四大先驱之一的卢因1947年率先提出的“把关人”理论受到强烈冲击,以至于更有甚者宣称,“守门人”时代结束。一个理论的建立,在某种意义上讲是现实实践的结论升华,它反过来必然要指导实践活动。一个理论的结束,对于现实生活是具有重大意义的。博客技术下发展起来的博客群体、博客媒介和博客传播,是否将重新定义互联网的界限…而到如今，博客更多是作为网络日记，起着只是过滤与积累的作用。以前也出现过博客营销，但是互联网技术的飞速发展，使得营销的手段越来越多样化，博客已经成为历史。但是，博客，之所以公开在网络上，就是因为他不等同于私人日记，博客的概念肯定要比日记大很多，它不仅仅要记录关于自己的点点滴滴，还注重它提供的内容能帮助到别人，也能让更多人知道和了解。很好的一句话：博客永远是共享与分享精神的体现。 在这个喧嚣与浮躁的社会，写博客就好比过去的写毛笔字，使人平心静气，沉下心来，借用诸葛孔明的一句话就是 “非淡泊无以明志，非宁静无以致远”，因此写博客是一种态度，说一句不太恰当的话，大概就是不枉此生吧。 博客选择得益于互联网的发展，如今想要拥有一个个人博客网站已经是非常容易地一件事，百度随便一搜就有各种方案，这里随便列举几个： 互联网博客平台网易，腾讯，新浪，博客园，CSDN……只要创建一个账号就能轻松拥有一个博客，但是，一般来讲，轻而易举的得到一个东西，很难珍而重之，所以…… wordpressWordPress是一种使用PHP语言开发的博客平台，用户可以在支持PHP和MySQL数据库的服务器上架设属于自己的网站。也可以把 WordPress当作一个内容管理系统（CMS）来使用。WordPress是一款个人博客系统，并逐步演化成一款内容管理系统软件，它是使用PHP语言和MySQL数据库开发的。用户可以在支持 PHP 和 MySQL数据库的服务器上使用自己的博客。WordPress有许多第三方开发的免费模板，安装方式简单易用。不过要做一个自己的模板，则需要你有一定的专业知识。比如你至少要懂的标准通用标记语言下的一个应用HTML代码、CSS、PHP等相关知识。WordPress官方支持中文版，同时有爱好者开发的第三方中文语言包，如wopus中文语言包。WordPress拥有成千上万个各式插件和不计其数的主题模板样式。 typeco众所周知WordPress是博客程序之冠，大多数的独立博客都是用它搭建。但随着它的功强增强，应用增加，代码也变得十分臃肿。于是很多人又会选择WordPress之外的一些博客程序或新的方式搭建博客，回归最初博客简单书写，于是又有一批博客程序新秀。 github+jekyllJekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过 Markdown （或者 Textile） 以及 Liquid 转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。 github+hexoHexo使用node.js开发，是一个快速、简洁且高效的博客框架。Hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题生成静态网页。而且可以本地预览。 最后选择github+hexo的方式搭建，原因如下: 静态网站+免费托管 node.js对windows平台友好，且hexo支持本地预览博客 hexo有丰富的主题 支持markdown语法，书写简单流畅 博客搭建以后会专门写一篇文章详细介绍。","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"喜欢和有感情","slug":"like-emotion","date":"2015-11-15T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/11/16/like-emotion/","link":"","permalink":"http://dmxiaoshen.com/2015/11/16/like-emotion/","excerpt":"这两个词其实是有区别的。喜欢就是想要，有感情就是舍不得。人是社会的人，不可避免的会喜欢上这样那样的人或事，这是无可厚非的。是的，获得与拥有总是美好的，但是，失去是纠结的。看过一篇文章，如下:","text":"这两个词其实是有区别的。喜欢就是想要，有感情就是舍不得。人是社会的人，不可避免的会喜欢上这样那样的人或事，这是无可厚非的。是的，获得与拥有总是美好的，但是，失去是纠结的。看过一篇文章，如下: 已经有男女朋友了，但又遇到更喜欢的怎么办？（虽然狗这个比方没有很恰当，但是很有道理） 你还搞不懂【喜欢一个人】和【对一个人有感情】之间的区别。 我拿养狗来举例吧，虚构两个情景。 情景一。 某天你去宠物市场闲逛，发现有一只泰迪很可爱，伶俐活泼聪明漂亮，还特别粘着你。你当时就动心了，打算买下它。 一问价格，要1500块钱。你身上没带这么多钱，也没带银行卡。当时是下午了，宠物市场马上要关门了。你只能第二天来买了。 于是你嘱咐店主千万不要卖给别人。一定要等你明天早上过来卖给你。 店主答应了。 可你回家了还是不放心。晚上在床上都睡不着觉。生怕店主不守信用，把这狗狗卖给别人了。那感觉，就像是爱上了一个姑娘一样。 第二天一早，你就揣了1500块钱奔向宠物市场。 这次，你是从市场的另外一个门进去的，还没有走到昨天那个摊位，你突然发现了另外一只泰迪，比昨天那只更漂亮，更聪明，更可爱，更粘你，价格还更便宜，只要1200元。。。。。 我相信，只要你智商正常，你都会选择买1200的这一只。虽然，你为了1500的那一只牵挂了一晚上。但那又如何，遇上更好的，你立刻就移情别恋了。 我们都是这样的人。 因为，我们对那只泰迪，没有感情。 场景二。 某雨天你下班回家，看到一只流浪的小狗趴在你的家门前瑟瑟发抖。你一下子恻隐之心上来了，把它抱回家，给它洗澡，给它喂食，让它睡在毛毯子上。 从此，它就成了你的家人。 接下来的一年，每天早上使它叫你起床。每天你疲惫的下班回到家中，是它在门口等着你。你出去逛街，它走在你前面。有小偷偷你的包，它疯狂吠叫。你看电视，它就睡在你腿上。你上网，它就趴在你脚尖。 它已经成为了你生活的一部分。 一年后。有一个人，也不知道脑子怎么进水了，想要拿一只名贵的纯种狗狗来换你这只不值钱的收养的流浪狗。 你会换吗？ 如果是我，当然不换。 因为我对它有感情了。 这就是感情。你懂了嘛？ 道理是这么个道理。但看评论都是一群起哄的，说什么都有，真正有价值的不多。人家只是阐述一个观点，表达一下意思。你可以赞同或反驳，这都没问题。最烦就是什么都不干（可能文章都没看全），上来就开喷。说到这个，在军事网站上尤其常见，完全忽略事情与问题，惯用的伎俩是极端民族主义和阴谋论（当然这跟五毛泛滥有关），不谈这个…… 太过炽烈的感情来得快去得也快，真正长久的必定是细水流长。怕的只是遇不到对的人，平淡的生活何尝不是一种幸福？ 你在池塘里活得很好 ，泥鳅很丑但会说喜庆话 ，癞蛤蟆很马虎但很有趣 ，田螺是个温柔的自闭症 ，小鲫鱼是你们共同的女神 。有一天你听说 ，江河湖海 ，哪个都要更大 ，更好 ，你跳了出去。 遇见了美丽的海豚 ，雄壮的白鲸，婀娜多姿的热带鱼 。的确都是好的 ，就是偶尔觉得世界很空 ，生活很咸。 平淡的时候守住自己，辉煌的时候守住平淡的心。","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"做一回诗人","slug":"poet","date":"2015-10-27T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/10/28/poet/","link":"","permalink":"http://dmxiaoshen.com/2015/10/28/poet/","excerpt":"这些诗歌纯属本人胡乱抒发，那会正在看《雪花女神龙》，发现儿时的电视剧都是挺用心的。总计7篇，用橘色字体标出的就是。","text":"这些诗歌纯属本人胡乱抒发，那会正在看《雪花女神龙》，发现儿时的电视剧都是挺用心的。总计7篇，用橘色字体标出的就是。 题记 江湖问路不问心，问心问得几路行。 我非江湖人， 偏走江湖路。 江湖难填恨海，剑出伤我心怀。 灵感来源： 搴汀洲兮杜若，将以遗兮远者。 虽闻有情花，杜若芳几许。借问何处寻，奈何无人识。 灵感来源： 怜花应相陪，何忍空垂泪。 暖日照芳菲，无须如影随。 如果真的怜惜女人，就应该多陪着她，怎能忍心使她徒然流泪。和暖的太阳给花儿传递光热，却并不需要像影子一样步步跟随。 世人皆知落花意，奈何流水非无情。花开花落有时尽，多情总比无情苦。 灵感来源： 碎心江湖行，剑出非我心。 正气江湖行，刀出非我意。 独怜井中月，莫笑井底蛙。月儿出天山，亦出云海间。 花开未得时，叶落亦无声。君问归何处，风雨诉别离。 月影重重关山外，杨柳依依古道边。是夜不知几多愁，空叹三国南北朝。 灵感来源： 喓喓草虫，趯趯阜螽。未见君子，忧心忡忡。 草虫是诗经里比较偏爱的一篇。 心系梦里花，不识堂前燕。情缘去难留，飘散风雨中。 灵感来源： 根非生下土，叶不坠秋风。 深夜无风秋意来，根归叶落终化尘。花开一世不两生，自当不坠青云志。 尾声文尽七篇，舞文弄墨，难登大雅。 残阳铺水，雨燕南飞。秋去冬来，望春归。","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"朋友请吃饭","slug":"talking","date":"2015-08-16T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/08/17/talking/","link":"","permalink":"http://dmxiaoshen.com/2015/08/17/talking/","excerpt":"","text":"今天一个朋友说请我吃饭，女的。我们也是老同学了，平时关系不错，彼此之间也很聊得来。其实，我对吃的，玩的什么的都很随意，没什么讲究，一般一个人也懒得出去，都是跟熟人一起。与朋友一起做什么都快乐，要的就是那份心情。一个人又有何快乐可言呢，快乐是需要分享的。吃饭的时候聊到婚姻，在这个年龄，这个话题太正常不过了。无非是谁谁谁要结婚了，谁谁谁有孩子了。相亲啊，介绍对象啊，之类的比比皆是。这就涉及年龄问题了，男女不一，同样的年龄对男女的差别是很大的，尤其是婚姻方面。两个人要结婚，涉及的方面太广了，首先要看的对眼，其次还要看父母态度如何，还有八字合不合，各种乱七八糟的。朋友问我，信不信八字。我回答，信就有，不信则无。这种事情也不好太过深究，人与人之间的差别还是很大的，就价值观一点上，不同的价值观就会产生形形色色的人格，且不论其他了。就我个人而言，我觉得结婚是个慎重的决定，可能跟我的处事原则有关，决不可草率了。两个人在一起两个人做决定，而分开往往只需要一个人做决定。有一句古话说的好，如人饮水，冷暖自知，两个人的心如果走不到一块去，我想无论外人看起来是如何幸福，恐怕也只有冷暖自知了。成熟是一种气质，而懂事是一种品质。两者之间，差别甚大。","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"你若安好便是晴天","slug":"nran","date":"2015-07-31T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/08/01/nran/","link":"","permalink":"http://dmxiaoshen.com/2015/08/01/nran/","excerpt":"","text":"燕子楼中霜月夜飞鸟空惭倦未还此情可待成追忆书卷多情似故人不知乘月几人归错唱当时一半声","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"重新启航","slug":"come-back","date":"2015-07-27T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/07/28/come-back/","link":"","permalink":"http://dmxiaoshen.com/2015/07/28/come-back/","excerpt":"博客耽搁了一段时间，因为不知道写些什么，可能是因为懒吧。没有一开始折腾那会有劲了。刚开始那会，看到别人都自己搭建博客觉得很有意思，重点是逼格高，哈哈。也就开始着手，看了很多资料，决定用Hexo来搭建在github上的博客，免费。","text":"博客耽搁了一段时间，因为不知道写些什么，可能是因为懒吧。没有一开始折腾那会有劲了。刚开始那会，看到别人都自己搭建博客觉得很有意思，重点是逼格高，哈哈。也就开始着手，看了很多资料，决定用Hexo来搭建在github上的博客，免费。也尝试过很多主题，最后还是回归到精简的主题，也就是现在的样子，经过自己修改，字体，样式什么的都调整了下。感觉很舒服。博客不在于形式，重点在内容。这点受简书影响。简书这网站不错， 始终致力于做中文世界最好的写作与阅读平台，集结最优秀的创作者与文字爱好者,在嘈杂喧嚣的网络时代，重新沉淀并唤醒文字的力量。 是的，因为随着年龄的增长，我们很难再有儿时那种纯粹的阅读体验，浮躁的社会，让我们很难去感受文字的力量。就我本身而言，初中那会，应该在寒假吧，一本《神秘岛》都能让我忘却游戏，忘却一切，就喜欢沉浸其中，随着书中的主角去冒险，去经历种种。我不想过多的去评论书本身，初中生畅销书是肯定的，而且儒勒·凡尔纳的书肯定不错，《格兰特船长的儿女》，《海底两万里》，《神秘岛》 凡尔纳三部曲经典。可惜我只看了最后一本，后悔当时没看全，以至错过了最佳阅读时机。现在或许有时间了，可惜再也无法有那种感受。不觉想起张爱玲的一转身一辈子（文后会附上）,此情此景，彼时彼刻。 说到张爱玲，记得一个朋友说让我推荐她点书看看，我挑来挑去也想不到哪些书适合女孩子看又不会过时，我在想，究竟什么是不会过时的呢？文字的力量可以穿越时空，让阅读者产生共鸣没错，但关键还是内容。如果说，这世上还有什么不变的东西，我想那就是历史了。最后我给她买了二本书《因为懂得所以慈悲：张爱玲的倾城往事》《你若安好便是晴天——林徽因传》，没错，人物传记。之所以挑这两本原因是一辞藻华丽（这是它的优点也恰恰是它的缺点，但是至少让人对文字有一个感性的认识），二两位民国时期的人物可以说是各有千秋，三永不过时。我希望的是无论她什么时候翻看都会有所收获，毕竟一个人的一生怎么能被一本书写尽？这也正是人物传记的独特魅力所在，人只有求知，才会好学。人太容易随波逐流，太容易迷失自己，追名逐利，从而忘记生活本来应该有的滋味。一辈子不容易就图个团团圆圆、平平安安。 有些事 一转身 就是一辈子 有些人一直没机会见，等有机会见了，却又犹豫了，相见不如不见。 有些事一直没机会做，等有机会了，却不想再做了。 有些话埋藏在心中好久，没机会说，等有机会说的时候，却说不出口了。 有些爱一直没机会爱，等有机会了，已经不爱了。 有些人很多机会相见的，却总找借口推脱，想见的时候已经没机会了。 有些话有很多机会说的，却想着以后再说，要说的时候，已经没机会了。 有些事有很多机会做的，却一天一天推迟，想做的时候却发现没机会了。 有些爱给了你很多机会，却不在意没在乎，想重视的时候已经没机会爱了。 人生有时候，总是很讽刺。 一转身可能就是一世。说好永远的，不知怎么就散了。 最后自己想来想去竟然也搞不清当初是什么原因分开彼此的。 然后，你忽然醒悟，感情原来是这么脆弱的。 经得起风雨，却经不起平凡；风雨同船，天晴便各自散了。 也许只是赌气，也许只是因为小小的事。 幻想着和好的甜蜜，或重逢时的拥抱，那个时候会是边流泪边捶打对方，还傻笑着。 该是多美的画面。 没想到的是，一别竟是一辈子了。 于是，各有各的生活，各自爱着别的人。 曾经相爱，现在已互不相干。 即使在同一个小小的城市，也不曾再相逢。 某一天某一刻，走在同一条街，也看不见对方。 先是感叹，后来是无奈。 也许你很幸福，因为找到另一个适合自己的人。 也许你不幸福，因为可能你这一生就只有那个人真正用心在你身上。 很久很久，没有对方的消息，也不再想起这个人，也是不想再想起这些事","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"墙里墙外","slug":"qlqw","date":"2015-06-30T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/07/01/qlqw/","link":"","permalink":"http://dmxiaoshen.com/2015/07/01/qlqw/","excerpt":"","text":"原谅我这一生不羁放纵爱自由也会怕有一天会跌倒背弃了理想谁人都可以哪会怕有一天只你共我仍然自由自我永远高唱我歌走遍千里 这些年，发生了很多事情。互联网的发达使得信息得以飞速传递，人们获得的信息资讯也是海量的。 前几年新疆暴乱，茉莉花事件到近来的占中，柴静，各式”反腐”，区伯……等等，很多时候事情都没有那么简单，墙内的审查制度，新闻媒体的不自由，导致报道的片面性。这话题打住…… 价值观真的必须自发形成，而独立思考是基础。可惜的是，我们的教育没有教我们，独立的，批判性的思维。在残酷的现实面前，任何的启蒙都是多余的。 苏格拉底有一句名言，愿与各位共勉：未经思考的人生是不值得过的人生。","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]},{"title":"Hexo博客在icarus主题下写作的常用功能","slug":"hexo-article-collect","date":"2015-04-26T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/04/27/hexo-article-collect/","link":"","permalink":"http://dmxiaoshen.com/2015/04/27/hexo-article-collect/","excerpt":"博客由hexo搭建，使用icarus主题，该主题有丰富的特性，稍作记录，以备后忘。","text":"博客由hexo搭建，使用icarus主题，该主题有丰富的特性，稍作记录，以备后忘。 分类12345678910111213---categories:- 笔记- Hexo---效果就是[Hexo]是[笔记]的二级目录分类同理，多标签则可以写作---tags:- 标签1- 标签2--- 主页文章banner123---banner: 图片url--- 文章缩略图123---thumbnail: 缩略图url--- 文章目录123---toc: true--- 主页文章多图123456---photos:- 图片地址1- 图片地址2- 图片地址3---","categories":[],"tags":[]},{"title":"点点星光闪动着","slug":"star","date":"2015-03-14T16:00:00.000Z","updated":"2018-06-28T03:48:31.978Z","comments":true,"path":"2015/03/15/star/","link":"","permalink":"http://dmxiaoshen.com/2015/03/15/star/","excerpt":"我看过最好看的刑侦电视剧《重案六组》。","text":"我看过最好看的刑侦电视剧《重案六组》。 点点星光闪动着 你诚实的眼神 蓝蓝夜空敞开了 你寂寞的胸襟 面对冰冷的世界 依然会有一颗火热的心 你不情愿说出来 你心中的苦闷 偏偏在乎是不是 尽了你的责任 用那温暖的情怀 呵护着你最最珍爱的人 日日夜夜 用忘我兑现承诺 无怨无悔 用爱心陪伴 这风雨人生 这是《重案六组》的片尾曲《风雨人生》，说实话，国内的刑侦电视剧，我只喜欢两部，《刑事侦缉档案》和《重案六组》。刑警的生活是枯燥的，但是正如歌曲唱的那样，这同样是一份值得尊敬的工作。《重案六组》拍的非常真实，我是说情感方面，每一个案件，每一个人物，真实到仿佛就发生在自己身边。剧情非常紧凑，人物刻画很细腻。我觉得这首歌简直是对这个剧的画龙点睛，细细读来，每一句的画面感都极强。喜欢里面的郑一民，季洁，杨震等等，总之六组的成员都喜欢，每个人的个性鲜明，尤其是第四部的收视率之高，简直无情。真心期待第五部。 每个人的生活都是不同的，总要经历一些事情，有感动，有痛楚，有欢乐，有孤独，我们能做的就是坚持本心，包容万物的同时要有一个火热的心，总要担负起自己的责任，哪怕心中有说不出的苦闷，可是不管怎样，我们都要守护着最最珍爱的人不是么？用忘我兑现承诺，无怨无悔，用爱心陪伴这风雨人生。","categories":[{"name":"essay","slug":"essay","permalink":"http://dmxiaoshen.com/categories/essay/"}],"tags":[]}]}